[0m[[0minfo[0m] [0m[32mHuffmanSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- times[0m[0m
[0m[[0minfo[0m] [0m[32m- makeOrderedLeafList[0m[0m
[0m[[0minfo[0m] [0m[32m- weight of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- chars of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- string2chars("hello, world")[0m[0m
[0m[[0minfo[0m] [0m[32m- makeOrderedLeafList for some frequency table[0m[0m
[0m[[0minfo[0m] [0m[32m- combine of some leaf list[0m[0m
[0m[[0minfo[0m] [0m[32m- combine of some more list[0m[0m
[0m[[0minfo[0m] [0m[32m- combine of some complex list[0m[0m
[0m[[0minfo[0m] [0m[32m- until the end of some complex list[0m[0m
[0m[[0minfo[0m] [0m[32m- encode simple[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and encode a very short text should be identity[0m[0m
[0m[[0minfo[0m] [0m[32m- decode huffmanestcool[0m[0m
[0m[[0minfo[0m] [0m[32m- build[0m[0m
[0m[[0minfo[0m] [0m[32m- quick decode[0m[0m
[0m[[0minfo[0m] [0m[32m- quick anything[0m[0m
